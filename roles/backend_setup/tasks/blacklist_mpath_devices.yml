---
# This play is for blacklist devices
- name: Find whether device is a luks device
  shell: cryptsetup isLuks /dev/{{ item }}
  register: result
  failed_when: result.rc == 0
  with_items: "{{ blacklist_mpath_devices }}"
  when: blacklist_mpath_devices is defined

- name: Check that the multipath.conf exists
  stat:
    path: /etc/multipath.conf
  register: file_exist

- name: Ensure that multipathd services is enabled if not
  shell: vdsm-tool configure --force
  when: file_exist.stat.exists == False

- name: Ensure that multipathd services is running
  service:
    name: multipathd
    state: started
    enabled: yes

- name: Flush all empty multipath devices
  shell: multipath -F

- name: Create /etc/multipath/conf.d if doesn't exists
  file:
    path: /etc/multipath/conf.d
    recurse: yes
    state: directory

- name: Get the UUID of the devices
  ignore_errors: True
  shell: multipath -a /dev/{{ item }}
  register: dev_uuid
  with_items: "{{ blacklist_mpath_devices }}"

- name: Check that the blacklist.conf exists
  stat:
    path: /etc/multipath/conf.d/blacklist.conf
  register: stat_result

- name: Create blacklist template content
  blockinfile:
    path: /etc/multipath/conf.d/blacklist.conf
    create: yes
    state: present
    block: |
      blacklist {
      }
  when: stat_result.stat.exists == False

- name: Add wwid to blacklist in blacklist.conf file
  blockinfile:
    path: /etc/multipath/conf.d/blacklist.conf
    insertafter: 'blacklist'
    block: |
       wwid "{{ item.stdout.split()[1][1:-1] }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.item }}"
  loop: "{{ dev_uuid.results }}"
  when: blacklist_mpath_devices | length > 0 and item.failed == false

- name: Reload multipathd
  shell: systemctl reload multipathd
