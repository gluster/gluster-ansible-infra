---
# Gather facts to determine the distribution
- name: Gather facts to determine the OS distribution
  setup:
    gather_subset:
      - '!all'
      - '!any'
      - distribution

# Create a logical volume thinpool when thinpoolname is given
- name: Change to Install lvm tools for debian systems.
  package:
    name: thin-provisioning-tools
    state: present
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: Change to Install lvm tools for RHEL systems.
  package:
    name: device-mapper-persistent-data
    state: present
  when: ansible_os_family == 'RedHat'

- name: Install python-yaml package for Debian systems
  package:
    name: python-yaml
    state: present
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

# Initialize vdo_devs to empty list, vdo_devs would not not be initialized if
# search fails
- name: Initialize vdo_devs array
  set_fact:
     vdo_devs: []

# Get the list of volume groups created on vdo disks
# This is a bit hacky, we rely on pvname to get vdo disks
- name: Record VDO devices (if any)
  set_fact:
     vdo_devs: "{{ vdo_devs|default([]) + [ item.vgname ] }}"
  with_items: "{{ gluster_infra_volume_groups }}"
  when: item.pvname is search("/dev/mapper/")

- name: Create a vdo disk
  import_tasks: vdo_create.yml
  when: gluster_infra_vdo is defined
  tags:
    - vdocreate

- name: Create a volume group
  import_tasks: vg_create.yml
  when: gluster_infra_volume_groups is defined
  tags:
    - vgcreate

# If a thick volume is requested for the same vg
- name: Create a thick logical volume
  import_tasks: thick_lv_create.yml
  when: gluster_infra_thick_lvs is defined
  tags:
    - thickvol

# Run pre-requisites check before creating thinpools
- name: Run pre-requisites tests to create thinpools
  import_tasks: thin_pool_prereqs.yml
  when: gluster_infra_thinpools is defined
  tags:
    - thinprereq

# Create a thinpool for the given volume group
- name: Create thin pool
  import_tasks: thin_pool_create.yml
  when: gluster_infra_thinpools is defined
  tags:
    - thinpool

# Create a thin volume
- name: Create thin logical volume
  import_tasks: thin_volume_create.yml
  when: gluster_infra_lv_logicalvols is defined
  tags:
    - thinvol

# Setup cache on the given SSD
- name: Setup cache
  import_tasks: cache_setup.yml
  when: gluster_infra_cache_vars is defined
  tags:
    - cachesetup

# Create a filesystem on the disks.
- name: Create a filesystem on the disks
  import_tasks: fscreate.yml
  when: gluster_infra_lv_logicalvols is defined or
        gluster_infra_thick_lvs is defined
  tags:
    - fscreate

# When VDO is used, upon creation and activation of thinpools discard is not
# possible, because of the misaligned discard size between thinpool and VDO.
# Warning: kernel: device-mapper: thin: Data device (dm-N) max discard sectors
# smaller than a block: Disabling discard passdown. Is displayed.
# To overcome this, add command in service file to set
# /sys/kvdo/max_discard_sectors to 4096 and restart vdo service

- name: Update vdo service to set /sys/kvdo/max_discard_sectors to 4096
  lineinfile:
     path: /usr/lib/systemd/system/vdo.service
     line: 'ExecStartPre=/bin/sh -c "echo 4096 > /sys/kvdo/max_discard_sectors"'
     insertafter: '^ExecStart'
  when: gluster_infra_vdo is defined
  tags:
    - vdocreate

# Restart vdo service
- name: Enable and start vdo service
  service:
    name: vdo
    state: started
    enabled: yes

# Mount the devices
- name: Mount the devices
  import_tasks: mount.yml
  when: gluster_infra_mount_devices is defined
  tags:
    - mount
