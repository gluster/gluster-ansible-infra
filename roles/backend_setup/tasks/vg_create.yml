---
# We have to set the dataalignment for physical volumes, and physicalextentsize
# for volume groups. For JBODs we use a constant alignment value of 256K
# however, for RAID we calculate it by multiplying the RAID stripe unit size
# with the number of data disks. Hence in case of RAID stripe_unit_size and data
# disks are mandatory parameters.

# TODO: Handle invalid disktype and throw usage message

# Set data alignment for JBODs, by default it is 256K. This set_fact is not
# needed if we can always assume 256K for JBOD, however we provide this extra
# variable to override it.
- name: Set PV data alignment for JBOD
  set_fact:
     pv_dataalign: "{{ gluster_infra_dalign | default('256K') }}"
  when: gluster_infra_disktype == 'JBOD'

# Set data alignment for RAID
# We need KiB: ensure to keep the trailing `K' in the pv_dataalign calculation.
- name: Set PV data alignment for RAID
  set_fact:
     pv_dataalign: >
        {{ gluster_infra_diskcount|int *
           gluster_infra_stripe_unit_size|int }}K
  when: >
      gluster_infra_disktype == 'RAID6' or
      gluster_infra_disktype == 'RAID10'

# Set pesize for RAID disktypes while creating a volume group
# By default the `lvg' module expects size in MiB: divide by 1024.
# Once issue: https://github.com/ansible/ansible/issues/38103 is resolved the
# division by 1024 can be removed.
- name: Set VG physical extent size for RAID
  set_fact:
     vg_pe: >
         {{ gluster_infra_diskcount|int *
            gluster_infra_stripe_unit_size|int / 1024 }}
  when: >
     gluster_infra_disktype == 'RAID6' or
     gluster_infra_disktype == 'RAID10'

- name: Set the PE size
  set_fact:
     vg_pesize: "{{ vg_pe | int + 0.5 | round | int }}"
  when: >
     gluster_infra_disktype == 'RAID6' or
     gluster_infra_disktype == 'RAID10'

# If the disk is vdo, generate the vdo device(s)
# A bit kludgy
- name: Set the vdo disks
  set_fact:
     gluster_infra_pvs:
         "/dev/mapper/{{gluster_infra_vdo|map(attribute='name')|
                        join(',/dev/mapper/') }}"
  when: gluster_infra_vdo is defined

# Tasks to create a volume group
# The devices in `pvs' can be a regular device or a VDO device
- name: Create volume group - "{{gluster_infra_vg_name}}"
  lvg:
     state: present
     vg: "{{ gluster_infra_vg_name }}"
     pvs: "{{ gluster_infra_pvs }}"
     pv_options: "--dataalignment {{ pv_dataalign }}"
     # pesize is 4m by default for JBODs
     pesize: "{{ vg_pesize | default(4) }}"
