---

- name: Check if thick-lv block devices exists
  shell: >
   {%if (item.pvs is defined) %}
   {% for pvsname in item.pvs.split(",")  %}
   test -b {{ pvsname }} && echo "1" || echo  "0";
   {% endfor %}
   {% else %}
   echo "1"
   {% endif %}
  register: lv_device_exists
  with_items: "{{ gluster_infra_thick_lvs }}"
  when: item is not none

- name: Record for missing devices for phase 2
  set_fact:
   gluster_phase2_has_missing_devices: true
  loop: "{{ lv_device_exists.results }}"
  when: item.stdout_lines is defined and "0" in item.stdout_lines


- include_tasks: get_vg_groupings.yml
  vars:
   volume_groups: >-
      {%- set output=[] -%}
      {%- for cnf in gluster_infra_thick_lvs -%}
      {%- if cnf is defined and cnf is not none and cnf.vgname is defined
            and (cnf.pvs is defined)
      -%}
      {{- output.append({"vgname": cnf.vgname, "raid": cnf.raid | default() , "pvname": (cnf.pvs|default('')).split(',') | select | list | unique | join(',')}) -}}
      {%- endif -%}
      {%- endfor -%}
      {{- output -}}
  when: gluster_infra_thick_lvs is defined and gluster_infra_thick_lvs is not none and gluster_infra_thick_lvs|length >0

- name: Make sure thick pvs exists in volume group
  register: gluster_changed_vgs
  shell: "vgcreate -s {%- if (item.value | first).raid is defined and (item.value | first).raid is not none
            and (item.value | first).raid.level is defined and (item.value | first).raid.devices is defined and (item.value | first).raid.stripe is defined
            and (item.value | first).raid.level in [0,5,6,10] -%}
         {%- if (item.value | first).raid.level == 0 -%}
         {{- ((item.value | first).raid.devices|int * (item.value | first).raid.stripe|int)|int ~ 'K'-}}
         {%- elif (item.value | first).raid.level == 5 -%}
         {{- (((item.value | first).raid.devices|int-1) * (item.value | first).raid.stripe|int)|int ~ 'K'-}}
         {%- elif (item.value | first).raid.level == 6 -%}
         {{- (((item.value | first).raid.devices|int-2) * (item.value | first).raid.stripe|int)|int ~ 'K'-}}
         {%- elif (item.value | first).raid.level == 10 %}
         {{- (((item.value | first).raid.devices|int/2) * (item.value | first).raid.stripe|int)|int ~ 'K'-}}
         {%- endif -%}
         {%- else -%}
         {{- 4 -}}
         {%- endif -%} {{ (item.value | first).vgname }} {{ item.value | json_query('[].pvname') | unique | join(',') }}  {% if (item.value | first).raid is defined and (item.value | first).raid is not none
            and (item.value | first).raid.level is defined and (item.value | first).raid.devices is defined and (item.value | first).raid.stripe is defined
            and (item.value | first).raid.level in [0,5,6,10]%}
         {% if (item.value | first).raid.level == 0 %}
         {{ '--dataalignment ' ~ ((item.value | first).raid.devices|int * (item.value | first).raid.stripe|int)|int ~ 'K'}}
         {% elif (item.value | first).raid.level == 5 %}
         {{ '--dataalignment ' ~ (((item.value | first).raid.devices|int-1) * (item.value | first).raid.stripe|int)|int ~ 'K'}}
         {% elif (item.value | first).raid.level == 6 %}
         {{ '--dataalignment ' ~ (((item.value | first).raid.devices|int-2) * (item.value | first).raid.stripe|int)|int ~ 'K'}}
         {% elif (item.value | first).raid.level == 10 %}
         {{ '--dataalignment ' ~ (((item.value | first).raid.devices|int/2) * (item.value | first).raid.stripe|int)|int ~ 'K'}}
         {% endif %}
         {% else %}
         {{ '--dataalignment 256K' }}
         {% endif %}"
  #lvg:
  #   state: present
  #   vg: "{{ (item.value | first).vgname }}"
  #   pvs: "{{ item.value | json_query('[].pvname') | unique | join(',') }}"
  #   pv_options: >-
  #       {% if (item.value | first).raid is defined and (item.value | first).raid is not none
  #          and (item.value | first).raid.level is defined and (item.value | first).raid.devices is defined and (item.value | first).raid.stripe is defined
  #          and (item.value | first).raid.level in [0,5,6,10]%}
  #       {% if (item.value | first).raid.level == 0 %}
  #       {{ '--dataalignment ' ~ ((item.value | first).raid.devices|int * (item.value | first).raid.stripe|int)|int ~ 'K'}}
  #       {% elif (item.value | first).raid.level == 5 %}
  #       {{ '--dataalignment ' ~ (((item.value | first).raid.devices|int-1) * (item.value | first).raid.stripe|int)|int ~ 'K'}}
  #       {% elif (item.value | first).raid.level == 6 %}
  #       {{ '--dataalignment ' ~ (((item.value | first).raid.devices|int-2) * (item.value | first).raid.stripe|int)|int ~ 'K'}}
  #       {% elif (item.value | first).raid.level == 10 %}
  #       {{ '--dataalignment ' ~ (((item.value | first).raid.devices|int/2) * (item.value | first).raid.stripe|int)|int ~ 'K'}}
  #       {% endif %}
  #       {% else %}
  #       {{ "--dataalignment 256K" }}
  #       {% endif %}
  #
  #   pesize: >-
  #       {%- if (item.value | first).raid is defined and (item.value | first).raid is not none
  #          and (item.value | first).raid.level is defined and (item.value | first).raid.devices is defined and (item.value | first).raid.stripe is defined
  #          and (item.value | first).raid.level in [0,5,6,10] -%}
  #       {%- if (item.value | first).raid.level == 0 -%}
  #       {{- ((item.value | first).raid.devices|int * (item.value | first).raid.stripe|int)|int ~ 'K'-}}
  #       {%- elif (item.value | first).raid.level == 5 -%}
  #       {{- (((item.value | first).raid.devices|int-1) * (item.value | first).raid.stripe|int)|int ~ 'K'-}}
  #       {%- elif (item.value | first).raid.level == 6 -%}
  #       {{- (((item.value | first).raid.devices|int-2) * (item.value | first).raid.stripe|int)|int ~ 'K'-}}
  #       {%- elif (item.value | first).raid.level == 10 %}
  #       {{- (((item.value | first).raid.devices|int/2) * (item.value | first).raid.stripe|int)|int ~ 'K'-}}
  #       {%- endif -%}
  #       {%- else -%}
  #       {{- 4 -}}
  #       {%- endif -%}
  loop: "{{ gluster_volumes_by_groupname | dict2items if gluster_volumes_by_groupname is defined and gluster_volumes_by_groupname is not none else [] }}"
  loop_control:
   index_var: index
  when: >
   gluster_volumes_by_groupname is defined and gluster_volumes_by_groupname is not none and gluster_volumes_by_groupname|length >0
   and item  is defined and item.value is defined and item.value|length>0

- name: update LVM fact's
  setup:
   filter: 'ansible_lvm'
  when: gluster_changed_vgs.changed

# Create a thick logical volume.
- name: Create thick logical volume
  command: "lvcreate -L {{ item.size | default('100%FREE') }}  -n {{ item.lvname }} {{ item.pvs | default() }} {{ item.vgname }} "
  #lvol:
  #  state: present
  #  vg: "{{ item.vgname }}"
  #  lv: "{{ item.lvname }}"
  #  size: "{{ item.size | default('100%FREE') }}"
  #  pvs: "{{ item.pvs | default() }}"
  #  opts: "{{ item.opts | default() }}"
  #  shrink: "{{ item.shrink if item.shrink is defined and item.shrink is not none else true }}"
  with_items: "{{ gluster_infra_thick_lvs }}"
  loop_control:
   index_var: index
  when: item is not none and lv_device_exists.results[index].stdout_lines is defined and "0" not in lv_device_exists.results[index].stdout_lines
